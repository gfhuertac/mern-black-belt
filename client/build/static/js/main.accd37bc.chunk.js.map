{"version":3,"sources":["components/PollSummary.js","components/Home.js","components/PollForm.js","components/PollVoteForm.js","components/PollResult.js","App.js","serviceWorker.js","index.js"],"names":["props","poll","className","data","options","map","item","index","angle","votes","reduce","accumulative","current","option","name","showLabels","width","height","href","onClick","e","setPage","question","count","key","parse","tz","fromNow","createdAt","useState","message","setMessage","top3","setTop3","recent","setRecent","useEffect","axios","get","then","res","t3","sort","a","b","number_of_votes","slice","r","filter","indexOf","catch","error","Alert","variant","type","length","PollSummary","setQuestion","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","onSubmit","preventDefault","push","post","htmlFor","id","rows","onChange","target","value","buttons","style","margin","_id","onClickHandler","colors","innerRadius","radius","label","color","App","page","Home","PollForm","PollVoteForm","PollResult","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.accd37bc.chunk.js","sourcesContent":["import 'moment-timezone';\r\n\r\nimport React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { RadialChart } from 'react-vis';\r\n\r\nexport default (props) => {\r\n    const { poll } = props;\r\n    return (\r\n        <div className=\"card border-dark mb-3\">\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                <RadialChart\r\n                    data={\r\n                        poll.options.map( (item, index) => {\r\n                            let count = poll.votes.reduce((accumulative, current) => (current.option === item) ? accumulative + 1 : accumulative, 0);\r\n                            return { angle: count, name: item }\r\n                        } ) \r\n                    }\r\n                    showLabels\r\n                    width={150}\r\n                    height={150} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\"><a href onClick={ (e) => props.setPage([\"vote\", { poll }]) }>{ poll.question }</a></h5>\r\n                        <p className=\"card-text\">\r\n                        {\r\n                            poll.options.map( (item, index) => {\r\n                                let count = poll.votes.reduce((accumulative, current) => (current.option === item) ? accumulative + 1 : accumulative, 0);\r\n                                return <span key={index}>{item}: {count} votes. </span>\r\n                            } ) \r\n                        }\r\n                        </p>\r\n                    <p className=\"card-text\"><small className=\"text-muted\">(<Moment parse=\"YYYY-MM-DDTHH:mm:ss.SSSZ\" tz=\"America/Santiago\" fromNow>{poll.createdAt}</Moment>)</small></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'; \r\n\r\nimport PollSummary from './PollSummary';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nexport default (props) => {\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [top3, setTop3] = useState([]);\r\n    const [recent, setRecent] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get( \"http://localhost:8000/api/polls\" )\r\n        .then( (res) => {\r\n            const t3 = [...res.data].sort((a, b) => b.number_of_votes - a.number_of_votes).slice(0,3);\r\n            setTop3( t3 );\r\n            const r = [...res.data].filter((item) => t3.indexOf(item) === -1);\r\n            setRecent(r);\r\n        })\r\n        .catch( (error) => setMessage(error) )\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            message !== \"\" && <Alert variant=\"danger\"><p>{ message }</p></Alert>\r\n        }\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n            </div>\r\n            <div className=\"col clearfix\">\r\n                <button type=\"button\" className=\"btn btn-primary float-right\" onClick={ (e) => props.setPage([\"create\", {}])}>Create your own poll</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <h2>Top 3 polls</h2>\r\n                <div className=\"content\">\r\n                    {\r\n                        top3.length !== 0 && top3.map( (item, index) => {\r\n                            return <PollSummary key={index} poll={item} setPage={props.setPage} />\r\n                        } )\r\n                    }\r\n                    {\r\n                        top3.length === 0 && <div>No poll available</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"col\">\r\n                <h2>Recent polls</h2>\r\n                <div className=\"content\">\r\n                    {\r\n                        recent.length !== 0 && recent.map( (item, index) => {\r\n                            return <PollSummary key={index} poll={item} setPage={props.setPage} />\r\n                        } )\r\n                    }\r\n                    {\r\n                        recent.length === 0 && <div>No poll available</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nexport default (props) => {\r\n    const { setPage } = props;\r\n    //keep track of what is being typed via useState hook\r\n    const [question, setQuestion] = useState(\"\"); \r\n    const [option1, setOption1] = useState(\"\");\r\n    const [option2, setOption2] = useState(\"\");\r\n    const [option3, setOption3] = useState(\"\");\r\n    const [option4, setOption4] = useState(\"\");\r\n    // error message\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    //handler when the form is submitted\r\n    const onSubmitHandler = e => {\r\n        //prevent default behavior of the submit\r\n        e.preventDefault();\r\n        if (question.length < 10) {\r\n            return setMessage(\"Question is required and must be at least 10 characters long\");\r\n        }\r\n        //make a post request to create a new poll\r\n        const options = [ ];\r\n        if (option1 !== \"\")\r\n            options.push(option1);\r\n        if (option2 !== \"\")\r\n            options.push(option2);\r\n        if (option3 !== \"\")\r\n            options.push(option3);\r\n        if (option4 !== \"\")\r\n            options.push(option4);\r\n        if (question.length < 10) {\r\n            return setMessage(\"Question is required and must be at least 10 characters long\");\r\n        }\r\n        if (options.length < 2) {\r\n            return setMessage(\"Options must be at least 2\");\r\n        }\r\n        const votes = [], number_of_votes = 0;\r\n        setMessage(\"\");\r\n        axios.post('http://localhost:8000/api/polls', {\r\n            question,\r\n            options,\r\n            votes,\r\n            number_of_votes\r\n        }).then((res) => setPage([\"home\", {}])\r\n        ).catch( (error) => setMessage(error.message) )\r\n    }\r\n    //onChange to update firstName and lastName\r\n    return (\r\n        <>\r\n        {\r\n            message !== \"\" && <Alert variant=\"danger\"><p>{ message }</p></Alert>\r\n        }\r\n        <div className=\"row\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"col clearfix\">\r\n                <button type=\"button\" className=\"btn btn-primary float-right\" onClick={ (e) => props.setPage([\"home\", {}])}>Go back</button>\r\n            </div>\r\n        </div>\r\n        <form onSubmit={onSubmitHandler}>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"questionTextArea\">Your Question: *</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"questionTextArea\" rows=\"3\" onChange={(e) => setQuestion(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"option1Text\">Option 1: *</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"option1Text\" onChange={(e) => setOption1(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"option2Text\">Option 2: *</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"option2Text\" onChange={(e) => setOption2(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"option3Text\">Option 3: </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"option3Text\" onChange={(e) => setOption3(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={ (e) => props.setPage([\"home\", {}]) }>Cancel</button>\r\n                    &nbsp;\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit Poll</button>\r\n                    <br />\r\n                    NOTE: fields marked with an * are mandatory\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"option4Text\">Option 4: </label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"option4Text\" onChange={(e) => setOption4(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nexport default (props) => {\r\n    // error message\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const { poll, setPage } = props;\r\n\r\n    //handler when a button is clicked\r\n    const onClickHandler = (e, option) => {\r\n        //prevent default behavior of the submit\r\n        e.preventDefault();\r\n        //make a post request to submit a vote\r\n        axios.post(`http://localhost:8000/api/poll/${poll._id}/vote`, {\r\n            option\r\n        })\r\n        .then((res) => {\r\n            setPage([\"result\", { poll: res.data }]);\r\n        })\r\n        .catch( (error) => setMessage(error.message) )\r\n    }\r\n\r\n    const buttons = ['btn-primary', 'btn-secondary', 'btn-success', 'btn-info'];\r\n\r\n    //onChange to update firstName and lastName\r\n    return (\r\n        <>\r\n        {\r\n            message !== \"\" && <Alert variant=\"danger\"><p>{ message }</p></Alert>\r\n        }\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n            </div>\r\n            <div className=\"col clearfix\">\r\n                <button type=\"button\" className=\"btn btn-primary float-right\" onClick={ (e) => props.setPage([\"home\", {}])}>Go back</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <h2>{ poll.question }</h2>\r\n            </div>\r\n        </div>\r\n        <div className=\"d-flex flex-wrap\">\r\n        {\r\n            poll.options.map( (item, index) => {\r\n                return (\r\n                <div key={index} className=\"card\" style={{ width: \"40%\", margin: \"1% 5%\" }}>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{ item }</h5>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        <button onClick={ (e) => { onClickHandler(e, item) }} className={`btn ${buttons[index]}`}>Vote { item }</button>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n        </>\r\n    )\r\n}","import 'moment-timezone';\r\n\r\nimport React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { RadialChart } from 'react-vis';\r\n\r\nexport default (props) => {\r\n    const { poll, setPage } = props;\r\n    const colors = ['red', 'blue', 'orange', 'green'];\r\n    return (\r\n        <>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n            </div>\r\n            <div className=\"col clearfix\">\r\n                <button type=\"button\" className=\"btn btn-primary float-right\" onClick={ (e) => setPage([\"home\", {}])}>Go back</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <Alert variant=\"success\">Thanks for voting! Here are the results.</Alert>\r\n                <h2>{ poll.question }</h2>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <RadialChart\r\n                    className={'donut-chart-example'}\r\n                    innerRadius={100}\r\n                    radius={140}\r\n                    data={\r\n                        poll.options.map( (item, index) => {\r\n                            let count = poll.votes.reduce((accumulative, current) => (current.option === item) ? accumulative + 1 : accumulative, 0);\r\n                            return { angle: count, label: item, color: colors[index] }\r\n                        } ) \r\n                    }\r\n                    showLabels\r\n                    width={300}\r\n                    height={300}>\r\n                </RadialChart>\r\n            </div>\r\n            <div className=\"col\">\r\n                {\r\n                    poll.options.map( (item, index) => {\r\n                        let count = poll.votes.reduce((accumulative, current) => (current.option === item) ? accumulative + 1 : accumulative, 0);\r\n                        return (<div key={index} className=\"d-flex\">\r\n                            <div className=\"mr-auto p-2\">{item}</div>\r\n                            <div className=\"p-2\">{count} votes</div>\r\n                        </div>)\r\n                    } ) \r\n                }\r\n            </div>\r\n            <div className=\"col\">\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n};","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Home from './components/Home';\nimport PollForm from './components/PollForm';\nimport PollVoteForm from './components/PollVoteForm';\nimport PollResult from './components/PollResult';\n\nfunction App() {\n  const [page, setPage] = useState([\"home\", {}]);\n\n  return (\n    <>\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">Voting Dojo</h1>\n        </div>\n      </div>\n      <div className=\"App\">\n        { page[0] === \"home\" && <Home setPage={setPage} /> }\n        { page[0] === \"create\" && <PollForm setPage={setPage} /> }\n        { page[0] === \"vote\" && <PollVoteForm poll={ page[1].poll } setPage={setPage} /> }\n        { page[0] === \"result\" && <PollResult poll={ page[1].poll } setPage={setPage} /> }\n      </div>\n    </> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}